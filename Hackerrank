/*Hackerrank Practice Problems */

/* Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.
The STATION table is described as follows: */

SELECT (COUNT(city) - COUNT(DISTINCT city))  AS difference
FROM station;


/* Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). 
If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically. */

SELECT city, LENGTH(city) 
FROM station 
ORDER BY LENGTH(city), city LIMIT 1;
SELECT city, LENGTH(city) 
FROM station 
ORDER BY length(city) DESC, city LIMIT 1;


/* Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates. */

SELECT DISTINCT(city)
FROM station
WHERE city LIKE 'A%' OR city LIKE 'E%' OR city LIKE 'I%' OR city LIKE 'O%' 
OR city LIKE 'U%';


/*Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.*/

SELECT DISTINCT(city) 
FROM station 
WHERE city LIKE '%a' OR city LIKE '%e' OR city LIKE '%i' OR city LIKE '%o' 
OR city LIKE '%u';   


/*Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. 
Your result cannot contain duplicates.*/

SELECT DISTINCT(city)
FROM station 
WHERE city RLIKE '^[AEIOU]' AND city RLIKE '[aeiou]$';


/*Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.*/

SELECT DISTINCT(city)
FROM station
WHERE upper(SUBSTR(CITY,1,1)) NOT IN ('A','E','I','O','U') AND lower(SUBSTR(CITY,1,1)) NOT IN
('a','e','i','o','u'); 


/*Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.*/

SELECT DISTINCT(city)
FROM station
WHERE SUBSTR(city, LENGTH(city), 1) NOT IN ('a','e','i','o','u');


/*Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.*/

SELECT DISTINCT(city) 
FROM station 
WHERE LOWER(SUBSTR(city,1,1)) NOT IN ('a','e','i','o','u') OR LOWER(SUBSTR(city, LENGTH(city),1)) NOT IN ('a','e','i','o','u');  


/*Query the Name of any student in STUDENTS who scored higher than 75 Marks. Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.*/

SELECT name
FROM students
WHERE marks > 75
ORDER BY RIGHT(name, 3), id;


/* Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.*/
+-------------+------------+
| Column      |   Type     |
+-------------+------------+
| employee_id | INTEGER    |
| name        | STRING     |
| months      | INTEGER    |
| salary      | INTEGER    |
+-------------+------------+

SELECT name
FROM employee
ORDER BY name ASC;


/* Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than  
per month who have been employees for less than  months. Sort your result by ascending employee_id. */
+-------------+------------+
| Column      |   Type     |
+-------------+------------+
| employee_id | INTEGER    |
| name        | STRING     |
| months      | INTEGER    |
| salary      | INTEGER    |
+-------------+------------+

SELECT name
FROM employee
WHERE salary > 2000 AND months < 10;


/*Query a count of the number of cities in CITY having a Population larger than .*/
+-------------+--------------+
| Field       | Type         |
+-------------+--------------+
| ID          | NUMBER       |
| NAME        | VARCHAR2(17) |
| COUNTRYCODE | VARCHAR2(3)  |
| DISTRICT    | VARCHAR2(20) |
| POPULATION  | NUMBER       |
+-------------+--------------+
SELECT COUNT(name)
FROM city
WHERE population > 100000;


/*Query the total population of all cities in CITY where District is California*/

SELECT SUM(population)
FROM city
WHERE district = 'California';


/* Query the average population for all cities in CITY, rounded down to the nearest integer.*/

SELECT ROUND(AVG(population))
FROM city;


/* Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.*/

SELECT SUM(population)
FROM city
WHERE countrycode = 'JPN';
